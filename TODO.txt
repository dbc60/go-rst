

Mon Sep 04 22:23 2017: I was last finishing up the buffer_test code for all of the token buffer functions.


* Sat Jun 17 03:06 2017: Implement section parse test

  04.00.05.00-title-with-imu-nodes-xx.json

  - Make p.token size dynamically. Instead of being a fixed size, the token buffer will keep all tokens received.

    - This is needed because it is not possible to go back far enough to get the start of a title in a section with inline
      markup. The buffer is overrun.

  - Add test section title with inline markup and overline

  - Add test for peekBackFrom()

  - Add test with inline markup and short underline

* Sun Sep 03 00:13 2017: RENAME NODE TARGET

  Perhaps DocumentBranchNode. NodeTarget is not self documenting.

  Fix node_target documentation

* Sun Sep 03 00:44 2017: Rename TitleNode, AdornmentNode to SectionTitleNode and SectionAdornmentNode

* Sat Sep 09 02:42 2017: Create dump_parse.sh to pretty print dumped structs

  Script should live in tools directory.

* Sat Jun 17 03:13 2017: Fix incorrect test

  04.00.04.01-bad-enum-list-with-numbered-title-nodes-xx.json

  Nodes parse as correct with no system messages, but pseduo xml shows system messages.

* Sun Feb 26 14:09 2017: Convert test checks to use testify package

* Mon Sep 04 22:02 2017: rewrite systemMessage handling

  It's attrocious

  Changing line 122 fixed a broken test after the tokenBuffer refactor

  119 func (p *Parser) systemMessageInlineMarkup(s *doc.SystemMessageNode, err parserMessage) *doc.LiteralBlockNode {
  120         switch err {
  121         case warningExplicitMarkupWithUnIndent:
  122                 s.Line = p.peek(1).Line
  123         }
  124         return nil
  125 }
* Sat Feb 20 01:10 2016: Should we convert char12 and vert tab to spaces before proccessing?

  From the spec:

  Other whitespace characters (form feeds [chr(12)] and vertical tabs [chr(11)]) are converted to single spaces before processing.

  - Complete whitespace handling. See the first three items in the implementation status doc

  - This might require renumbering the tests because whitespace handling is defined first in the spec...

    - If the tests are renumbered, the implementation doc test examples will need to be updated.

* Sun Feb 14 22:38 2016: Fix gocyclo on https://goreportcard.com/report/github.com/demizer/go-rst

* Sun Jun 11 11:03 2017: Get coverage reports above 95%

* Thu Oct 20 00:41 2016: IMPLEMENT GOOD TESTS FOR INLINE MARKUP

* Mon Jun 19 00:56 2017: The UltiSnips Snippets should be mentioned with snippets published to the repo.

  - Use some inline markup test as an example implementation.

* Mon Oct 10 17:53 2016: sectionLevels.Add() should be renamed to AddOrReuse()

  In section.go#145 a section is added or existing is returned. We should rename this function from Add() to AddOrReuse() for
  self documentation.

* Mon Oct 10 01:44 2016: Need to add blockquote levels

  Like sectionLevels, but for blockquotes. Currently set to use a hack so I can get all the tests to pass.

  Try to make indentQueue more general; perhaps we can use it for blockquotes as well as bullet lists.

* Mon Oct 10 01:27 2016: Debug output should be more like the rst2psuedo command

  I like how this debug output prints the current line and what state the state machine is in. We should use something
  similar.

  Example:

  rst2pseudoxml testdata/04-test-section/02-bad/04.00.04.00-unexpected-titles.rst --debug

